name: Static Test Creator

on:
  issue_comment:
    types: [created]
  issues:
    types: [opened, assigned]

jobs:
  static-test-creator:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@static-test-creator')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@static-test-creator') || contains(github.event.issue.title, '@static-test-creator')))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Configure gh CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh auth status

      - name: Create Static Tests
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          claude_args: |
            --mcp-config '{"mcpServers": {"levys-awesome-mcp": {"command": "node", "args": ["dist/src/index.js"]}}}'
            --allowedTools mcp__levys-awesome-mcp__invoke_agent,mcp__levys-awesome-mcp__list_agents,mcp__levys-awesome-mcp__backend_write,mcp__levys-awesome-mcp__frontend_write,Read,Glob,Grep,Bash(gh issue comment:*),Bash(gh api:*)
          allowed_bots: claude
          prompt: |
            I need you to create static type tests for TypeScript code. Please complete steps 1 and 2:

            Issue details:
            ${{ github.event_name == 'issue_comment' && format('Based on this issue comment: {0}', github.event.comment.body) || format('Based on this GitHub issue: {0}', github.event.issue.body) }}

            Step 1: React with an emoji to the comment/issue to acknowledge the request.

            Step 2: Invoke the static-test-creator agent with this prompt:
            "Analyze the specific file(s) mentioned and create comprehensive compile-time type tests for:
            - Generic functions and types
            - Conditional types and type transformations
            - Functions with complex parameter types
            - Any code that uses 'any' type that should have proper type definitions

            Read the target file(s), identify functions/types that need static tests, generate comprehensive compile-time tests using the test dictionary pattern, and add the tests to the same file(s). Ensure all tests compile correctly."

            Context:
            - Repository: ${{ github.repository }}
            - Issue: #${{ github.event.issue.number }}
            - Event: ${{ github.event_name }}
            - Workflow Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Handle Git Operations and PR Creation
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          claude_args: |
            --allowedTools Bash(npm run build:*),Bash(git:*),Bash(gh pr create:*),Bash(gh issue comment:*)
          allowed_bots: claude
          prompt: |
            Now complete step 3 - handle git operations and PR creation:

            Step 3: Use bash commands to:
            - Create a new branch for the changes using git commands
            - Commit the changes with a descriptive commit message
            - Push the branch to the remote repository
            - Open a pull request using gh pr create with proper title and description
            - Comment on the original issue with the PR link
            - Try to build the project with npm run build
            - If build fails, comment "@claude The build failed after adding tests. Please fix the compilation errors in the PR."

            Context:
            - Repository: ${{ github.repository }}
            - Issue: #${{ github.event.issue.number }}
            - Event: ${{ github.event_name }}
            - Workflow Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}


