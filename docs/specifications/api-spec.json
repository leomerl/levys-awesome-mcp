{
  "openapi": "3.0.3",
  "info": {
    "title": "User Authentication API",
    "description": "Secure user authentication API for login functionality with JWT tokens",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "api-support@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.example.com/v1",
      "description": "Production server"
    },
    {
      "url": "https://staging-api.example.com/v1",
      "description": "Staging server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User login",
        "description": "Authenticate user with email and password credentials",
        "operationId": "loginUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              },
              "examples": {
                "validLogin": {
                  "summary": "Valid login credentials",
                  "value": {
                    "email": "user@example.com",
                    "password": "SecurePassword123!",
                    "rememberMe": false
                  }
                },
                "rememberMeLogin": {
                  "summary": "Login with remember me option",
                  "value": {
                    "email": "user@example.com",
                    "password": "SecurePassword123!",
                    "rememberMe": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginSuccessResponse"
                },
                "examples": {
                  "successfulLogin": {
                    "summary": "Successful authentication",
                    "value": {
                      "success": true,
                      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                      "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                      "user": {
                        "id": "550e8400-e29b-41d4-a716-446655440000",
                        "email": "user@example.com",
                        "name": "John Doe"
                      },
                      "expiresAt": "2025-01-05T15:30:00Z"
                    }
                  }
                }
              }
            },
            "headers": {
              "X-RateLimit-Limit": {
                "description": "Number of requests allowed per time window",
                "schema": {
                  "type": "integer"
                }
              },
              "X-RateLimit-Remaining": {
                "description": "Number of requests remaining in current window",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request format or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "validationError": {
                    "summary": "Validation error",
                    "value": {
                      "success": false,
                      "error": {
                        "code": "VALIDATION_ERROR",
                        "message": "Invalid email format",
                        "timestamp": "2025-01-05T10:00:00Z",
                        "requestId": "req-123456"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "invalidCredentials": {
                    "summary": "Invalid credentials",
                    "value": {
                      "success": false,
                      "error": {
                        "code": "INVALID_CREDENTIALS",
                        "message": "Invalid email or password",
                        "timestamp": "2025-01-05T10:00:00Z",
                        "requestId": "req-123456"
                      }
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Account locked due to too many failed attempts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "accountLocked": {
                    "summary": "Account locked",
                    "value": {
                      "success": false,
                      "error": {
                        "code": "ACCOUNT_LOCKED",
                        "message": "Account temporarily locked. Please try again later.",
                        "timestamp": "2025-01-05T10:00:00Z",
                        "requestId": "req-123456"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "rateLimited": {
                    "summary": "Rate limit exceeded",
                    "value": {
                      "success": false,
                      "error": {
                        "code": "RATE_LIMITED",
                        "message": "Too many attempts. Please wait before trying again.",
                        "timestamp": "2025-01-05T10:00:00Z",
                        "requestId": "req-123456"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "description": "Number of seconds to wait before retrying",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "serverError": {
                    "summary": "Server error",
                    "value": {
                      "success": false,
                      "error": {
                        "code": "SYSTEM_ERROR",
                        "message": "An error occurred. Please try again later.",
                        "timestamp": "2025-01-05T10:00:00Z",
                        "requestId": "req-123456"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh access token",
        "description": "Get new access token using refresh token",
        "operationId": "refreshToken",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "User logout",
        "description": "Invalidate user session and tokens",
        "operationId": "logoutUser",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user profile",
        "description": "Retrieve authenticated user information",
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254,
            "description": "User's email address",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "maxLength": 128,
            "description": "User's password",
            "example": "SecurePassword123!"
          },
          "rememberMe": {
            "type": "boolean",
            "description": "Whether to create persistent session",
            "default": false,
            "example": false
          }
        }
      },
      "LoginSuccessResponse": {
        "type": "object",
        "required": ["success", "token", "refreshToken", "user", "expiresAt"],
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [true],
            "description": "Indicates successful authentication"
          },
          "token": {
            "type": "string",
            "description": "JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "JWT refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "Token expiration timestamp",
            "example": "2025-01-05T15:30:00Z"
          }
        }
      },
      "RefreshRequest": {
        "type": "object",
        "required": ["refreshToken"],
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Valid refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "RefreshResponse": {
        "type": "object",
        "required": ["success", "token", "refreshToken", "expiresAt"],
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [true],
            "description": "Indicates successful token refresh"
          },
          "token": {
            "type": "string",
            "description": "New JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "refreshToken": {
            "type": "string",
            "description": "New JWT refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "New token expiration timestamp",
            "example": "2025-01-05T15:30:00Z"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "required": ["success", "message"],
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [true],
            "description": "Indicates successful logout"
          },
          "message": {
            "type": "string",
            "description": "Logout confirmation message",
            "example": "Logout successful"
          }
        }
      },
      "UserProfileResponse": {
        "type": "object",
        "required": ["success", "user"],
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [true],
            "description": "Indicates successful user profile retrieval"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "required": ["id", "email"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique user identifier",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "description": "User's display name",
            "example": "John Doe"
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Whether user's email is verified",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Account creation timestamp",
            "example": "2024-01-01T00:00:00Z"
          },
          "lastLoginAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last login timestamp",
            "example": "2025-01-05T10:00:00Z"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": ["success", "error"],
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [false],
            "description": "Indicates request failure"
          },
          "error": {
            "type": "object",
            "required": ["code", "message", "timestamp", "requestId"],
            "properties": {
              "code": {
                "type": "string",
                "enum": [
                  "INVALID_CREDENTIALS",
                  "ACCOUNT_LOCKED",
                  "EMAIL_NOT_VERIFIED",
                  "MFA_REQUIRED",
                  "RATE_LIMITED",
                  "VALIDATION_ERROR",
                  "SYSTEM_ERROR"
                ],
                "description": "Error code for programmatic handling",
                "example": "INVALID_CREDENTIALS"
              },
              "message": {
                "type": "string",
                "description": "Human-readable error message",
                "example": "Invalid email or password"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "Error occurrence timestamp",
                "example": "2025-01-05T10:00:00Z"
              },
              "requestId": {
                "type": "string",
                "description": "Unique request identifier for debugging",
                "example": "req-123456"
              },
              "details": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "description": "Field-specific validation errors",
                "example": {
                  "email": ["Invalid email format"],
                  "password": ["Password must be at least 8 characters long"]
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT access token obtained from login endpoint"
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and session management endpoints"
    }
  ]
}